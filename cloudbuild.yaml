steps:
- name: 'python:3.7-slim'
  id: test
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install flask && python test_app.py -v'

- name: 'gcr.io/cloud-builders/docker'
  id: build
  args:
  - 'build'
  - '-t'
  - 'asia.gcr.io/$PROJECT_ID/hello-world:$SHORT_SHA'
  - '.'

- name: 'gcr.io/cloud-builders/docker'
  id: push
  args:
  - 'push'
  - 'asia.gcr.io/$PROJECT_ID/hello-world:$SHORT_SHA'

# [START cloudbuild-trigger-cd]
# This step clones the hello-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    gcloud kms decrypt \
    --ciphertext-file secrets/git-deploy-key.enc \
    --plaintext-file git-deploy-key \
    --key secret-key \
    --keyring developer-keyring \
    --location australia-southeast1 \
    --project ${_KMS_PROJECT_ID}

    chmod 400 git-deploy-key

    GIT_SSH_COMMAND='ssh -i git-deploy-key -o UserKnownHostsFile=ssh_known_hosts' git clone git@github.com:paulvalla/tw-in-a-box-gke-application-env.git
    ls
substitutions:
    _KMS_PROJECT_ID: kms-project-stg-3c1106

# # This step generates the new manifest
# - name: 'gcr.io/cloud-builders/gcloud'
#   id: Generate manifest
#   entrypoint: /bin/sh
#   args:
#   - '-c'
#   - |
#      sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
#      sed "s/COMMIT_SHA/${SHORT_SHA}/g" > hello-cloudbuild-env/kubernetes.yaml

# # This step pushes the manifest back to hello-cloudbuild-env
# - name: 'gcr.io/cloud-builders/gcloud'
#   id: Push manifest
#   entrypoint: /bin/sh
#   args:
#   - '-c'
#   - |
#     set -x && \
#     cd hello-cloudbuild-env && \
#     git add kubernetes.yaml && \
#     git commit -m "Deploying image gcr.io/${PROJECT_ID}/hello-cloudbuild:${SHORT_SHA}
#     Built from commit ${COMMIT_SHA} of repository hello-cloudbuild-app
#     Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
#     git push origin candidate

# # [END cloudbuild-trigger-cd]